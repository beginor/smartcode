@using SmartCode
@using SmartCode.Generator.Entity
@using static SmartCode.Generator.RazorTemplates.Contributions.AppFx.Common
@inherits SmartCode.TemplateEngine.Impl.RazorCoreTemplate<SmartCode.BuildContext>
@{
    var project = Model.Project;
    var build = Model.Build;
    var table = Model.GetCurrentTable();
}
import { Component, OnInit } from '@@angular/core';
import { CommonModule } from '@@angular/common';
import { FormsModule } from '@@angular/forms';
import { NzDrawerRef } from 'ng-zorro-antd/drawer';

import { AccountService, SvgIconComponent } from 'app-shared';
import { AntdModule } from 'projects/web/src/app/common';

import { @(ToClassName(table.Name))Service, @(ToClassName(table.Name))Model } from '../@(ToPath(table.Name)).service';

@@Component({
    selector: '@(ToNgSelector(table.Name))-detail',
    standalone: true,
    imports: [
        CommonModule,
        FormsModule,
        AntdModule,
        SvgIconComponent,
    ],
    templateUrl: './detail.component.html',
    styleUrl: './detail.component.css',
})
export class DetailComponent implements OnInit {

    public id = '0';
    public get title(): string {
        let title = '';
        if (this.id === '0') {
            title = '新建@(table.GetSummary())';
        }
        else if (this.editable) {
            title = '编辑@(table.GetSummary())';
        }
        else {
            title = '查看@(table.GetSummary())';
        }
        return title;
    }
    public editable = false;
    public model: @(ToClassName(table.Name))Model = { id: '0' };

    constructor(
        private drawerRef: NzDrawerRef,
        public account: AccountService,
        public vm: @(ToClassName(table.Name))Service
    ) { }

    public async ngOnInit(): Promise<void> {
        if (this.id !== '0') {
            const model = await this.vm.getById(this.id);
            if (!!model) {
                this.model = model;
            }
        }
    }

    public cancel(): void {
        this.drawerRef.close('');
    }

    public async save(): Promise<void> {
        if (this.id !== '0') {
            await this.vm.update(this.id, this.model);
        }
        else {
            await this.vm.create(this.model);
        }
        this.drawerRef.close('ok');
    }

}
